version: '3.8'

services:
  # Main OpenReranker API service
  open-reranker:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OPEN_RERANKER_DEBUG=false
      - OPEN_RERANKER_HOST=0.0.0.0
      - OPEN_RERANKER_PORT=8000
      - OPEN_RERANKER_USE_MLX=false  # Disable MLX in Docker
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./models:/app/models  # Mount models directory
    restart: unless-stopped
    networks:
      - open-reranker-network
    
  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - open-reranker-network
    
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - open-reranker-network
    
  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - open-reranker-network

# Development override
  # To use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
  open-reranker-dev:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPEN_RERANKER_DEBUG=true
      - OPEN_RERANKER_HOST=0.0.0.0
      - OPEN_RERANKER_PORT=8000
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app  # Mount source code for development
      - ./models:/app/models
    depends_on:
      - redis
    command: ["uvicorn", "open_reranker.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - open-reranker-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  open-reranker-network:
    driver: bridge
